apiVersion: v1
kind: Service
metadata:
  name: minio
spec:
  selector:
    app: minio
  ports:
    - name: api
      protocol: TCP
      port: 9000
      targetPort: 9000
    - name: console
      protocol: TCP
      port: 9001
      targetPort: 9001
---
apiVersion: v1
kind: Secret
metadata:
  name: minio-secret
type: Opaque
stringData:
  root-user: "minioroot"
  root-password: "minioroot"
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: minio
spec:
  capacity:
    storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  local:
    path: /mnt/data/minio
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - minikube
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: minio
spec:
  selector:
    matchLabels:
      app: minio
  serviceName: minio
  replicas: 1
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
        - name: minio
          image: minio/minio:RELEASE.2025-07-23T15-54-02Z
          args:
            - server
            - /data
            - --console-address
            - ":9001"
          env:
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef:
                  name: minio-secret
                  key: root-user
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: minio-secret
                  key: root-password
          ports:
            - name: api
              containerPort: 9000
            - name: console
              containerPort: 9001
          volumeMounts:
            - name: minio
              mountPath: /data
  volumeClaimTemplates:
    - metadata:
        name: minio
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: local-storage
        resources:
          requests:
            storage: 1Gi
---
apiVersion: batch/v1
kind: Job
metadata:
  name: create-minio-buckets
spec:
  template:
    spec:
      restartPolicy: OnFailure
      containers:
        - name: create-buckets
          image: minio/mc:RELEASE.2025-07-21T05-28-08Z
          command:
            - /bin/sh
            - -c
          args:
            - |
              echo "Waiting for MinIO to be ready..."
              until mc alias set minio http://minio:9000 $MINIO_ROOT_USER $MINIO_ROOT_PASSWORD; do
                echo "MinIO not ready, waiting 5 seconds..."
                sleep 5
              done
              echo "MinIO is ready! Creating buckets..."
              mc mb minio/loki --ignore-existing
              mc mb minio/mimir-blocks --ignore-existing  
              mc mb minio/tempo --ignore-existing
              echo "All buckets created successfully!"
          env:
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef:
                  name: minio-secret
                  key: root-user
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: minio-secret
                  key: root-password